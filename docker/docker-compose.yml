
services:
  db:
    image: postgres:latest
    container_name: db_mf
    volumes:
      - ../data:/var/lib/postgresql/data
    restart: unless-stopped

    env_file:
      - .env


  pgadmin:
    image: elestio/pgadmin
    container_name: pgadmin_mf
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    env_file:
      - .env


  nginx:
    image: nginx:latest
    container_name: nginx_mf
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/conf.d/base.conf:/etc/nginx/conf.d/base.conf
      - ../logs/nginx:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - web


  web:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileWeb
    container_name: web_mf
    volumes:
      - ../web:/app
      - ../logs/web:/app/logs
      - ../bot/db:/app/src/db
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env

  bot:
    build:
      context: ..
      dockerfile: docker/dockerfiles/DockerfileBot
      args:
        - --no-cache
    container_name: bot_mf
    volumes:
      - ../bot:/app
      - ../logs/bot:/app/logs
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env


volumes:
  pgadmin_data:
  redis_data:
    driver: local
